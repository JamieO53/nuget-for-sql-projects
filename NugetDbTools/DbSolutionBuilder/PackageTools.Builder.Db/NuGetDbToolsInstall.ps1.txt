param (
    [string]$path='.'
)
$nugetSource = 'https://pkgs.dev.azure.com/epsdev/_packaging/EpsNuGet/nuget/v3/index.json'
$nugetApiKey = 'NUG3TK3Y'
$contentFolder = 'Runtime'

function Set-NuGetConfig {
    $nugetConfigDir = "$env:APPDATA\JamieO53\NugetDbTools"
    $nugetConfigPath = "$nugetConfigDir\NugetDbTools.config"
    $configText = @"
<?xml version=`"1.0`"?>
<configuration>
    <nugetLocalServer>
        <add key=`"ApiKey`" value=`"$nugetApiKey`"/>
        <add key=`"ContentFolder`" value=`"$contentFolder`"/>
        <add key=`"Source`" value=`"$nugetSource`"/>
        <add key=`"PushTimeout`" value=`"900`"/> <!-- seconds -->
    </nugetLocalServer>
</configuration>
"@

    if (-not (Test-Path $nugetConfigDir)) {
        mkdir $nugetConfigDir | Out-Null
    }
    if (Test-Path $nugetConfigPath) {
        [xml]$nugetConfig = Get-Content $nugetConfigPath
        $nugetConfig.configuration.nugetLocalServer.add | % {
            $item = $_
            if ($item.key -eq 'Source') {
                $item.value = $nugetSource
            } elseif ($item.key -eq 'ApiKey') {
                $item.value = $nugetApiKey
            }
        }
        $nugetConfig.Save($nugetConfigPath)
    } else {
        $configText | Set-Content $nugetConfigPath -Encoding UTF8
    }
}

function Get-DbSolutionBuilder {
    $bootstrapFolder = "$Path\Bootstrap"
    if (Test-Path $BootstrapFolder) {
        del $BootstrapFolder\* -Recurse -Force
    } else {
        mkdir $BootstrapFolder | Out-Null
    }

    nuget install DbSolutionBuilder -Source $nugetSource -OutputDirectory $bootstrapFolder -ExcludeVersion

    ls $BootstrapFolder -Directory | % {
        ls $_.FullName -Directory | % {
            if (-not (Test-Path "$Path\$($_.Name)")) {
                mkdir "$Path\$($_.Name)" | Out-Null
            }
            copy "$($_.FullName)\*" "$Path\$($_.Name)"
        }
    }

    del $BootstrapFolder -Include '*' -Recurse

    'DbTemplate.xml','Install-DbSolutionBuilder.ps1','New-CiDbProject.ps1' | % {
        $filePath = "$Path\PackageTools\$_"
        if (Test-Path $filePath) {
            copy $filePath $Path
        }
    }
}

Set-NuGetConfig
Get-DbSolutionBuilder